{"ast":null,"code":"'use strict';\n\nvar _objectWithoutProperties = require(\"/home/smnc/Documents/weizenbaum/autofill_experiment2/autofill_experiment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectWithoutProperties\");\nvar _toConsumableArray = require(\"/home/smnc/Documents/weizenbaum/autofill_experiment2/autofill_experiment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\nvar _objectSpread = require(\"/home/smnc/Documents/weizenbaum/autofill_experiment2/autofill_experiment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\nvar _slicedToArray = require(\"/home/smnc/Documents/weizenbaum/autofill_experiment2/autofill_experiment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\nvar _classCallCheck = require(\"/home/smnc/Documents/weizenbaum/autofill_experiment2/autofill_experiment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/home/smnc/Documents/weizenbaum/autofill_experiment2/autofill_experiment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"/home/smnc/Documents/weizenbaum/autofill_experiment2/autofill_experiment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"/home/smnc/Documents/weizenbaum/autofill_experiment2/autofill_experiment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"/home/smnc/Documents/weizenbaum/autofill_experiment2/autofill_experiment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\nvar _wrapNativeSuper = require(\"/home/smnc/Documents/weizenbaum/autofill_experiment2/autofill_experiment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\nvar _asyncToGenerator = require(\"/home/smnc/Documents/weizenbaum/autofill_experiment2/autofill_experiment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\nvar _awaitAsyncGenerator = require(\"/home/smnc/Documents/weizenbaum/autofill_experiment2/autofill_experiment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\nvar _wrapAsyncGenerator = require(\"/home/smnc/Documents/weizenbaum/autofill_experiment2/autofill_experiment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction _asyncIterator(iterable) { var method, async, sync, retry = 2; for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) { if (async && null != (method = iterable[async])) return method.call(iterable); if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable)); async = \"@@asyncIterator\", sync = \"@@iterator\"; } throw new TypeError(\"Object is not async iterable\"); }\nfunction AsyncFromSyncIterator(s) { function AsyncFromSyncIteratorContinuation(r) { if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\")); var done = r.done; return Promise.resolve(r.value).then(function (value) { return { value: value, done: done }; }); } return AsyncFromSyncIterator = function AsyncFromSyncIterator(s) { this.s = s, this.n = s.next; }, AsyncFromSyncIterator.prototype = { s: null, n: null, next: function next() { return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments)); }, return: function _return(value) { var ret = this.s.return; return void 0 === ret ? Promise.resolve({ value: value, done: !0 }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments)); }, throw: function _throw(value) { var thr = this.s.return; return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments)); } }, new AsyncFromSyncIterator(s); }\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === 'm') throw new TypeError('Private method is not writable');\n  if (kind === 'a' && !f) throw new TypeError('Private accessor was defined without a setter');\n  if (typeof state === 'function' ? receiver !== state || !f : !state.has(receiver)) throw new TypeError('Cannot write private member to an object whose class did not declare it');\n  return kind === 'a' ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === 'a' && !f) throw new TypeError('Private accessor was defined without a getter');\n  if (typeof state === 'function' ? receiver !== state || !f : !state.has(receiver)) throw new TypeError('Cannot read private member from an object whose class did not declare it');\n  return kind === 'm' ? f : kind === 'a' ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractPage_client;\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.toBase64 = exports.getHeader = exports.isHeadersProtocol = exports.isRunningInBrowser = exports.debug = exports.hasOwn = exports.isEmptyObj = exports.maybeCoerceBoolean = exports.maybeCoerceFloat = exports.maybeCoerceInteger = exports.coerceBoolean = exports.coerceFloat = exports.coerceInteger = exports.readEnv = exports.ensurePresent = exports.castToError = exports.safeJSON = exports.isRequestOptions = exports.createResponseHeaders = exports.PagePromise = exports.AbstractPage = exports.APIResource = exports.APIClient = exports.APIPromise = exports.createForm = exports.multipartFormRequestOptions = exports.maybeMultipartFormRequestOptions = void 0;\nvar version_1 = require('./version.js');\nvar streaming_1 = require('./streaming.js');\nvar error_1 = require('./error.js');\nvar agent_1 = require('openai/_shims/agent');\nvar fetch_1 = require('openai/_shims/fetch');\nvar uploads_1 = require('./uploads.js');\nvar uploads_2 = require('./uploads.js');\nObject.defineProperty(exports, 'maybeMultipartFormRequestOptions', {\n  enumerable: true,\n  get: function get() {\n    return uploads_2.maybeMultipartFormRequestOptions;\n  }\n});\nObject.defineProperty(exports, 'multipartFormRequestOptions', {\n  enumerable: true,\n  get: function get() {\n    return uploads_2.multipartFormRequestOptions;\n  }\n});\nObject.defineProperty(exports, 'createForm', {\n  enumerable: true,\n  get: function get() {\n    return uploads_2.createForm;\n  }\n});\nvar MAX_RETRIES = 2;\nfunction defaultParseResponse(_x) {\n  return _defaultParseResponse.apply(this, arguments);\n}\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nfunction _defaultParseResponse() {\n  _defaultParseResponse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(props) {\n    var response, contentType, json, text;\n    return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n      while (1) switch (_context12.prev = _context12.next) {\n        case 0:\n          response = props.response;\n          if (!props.options.stream) {\n            _context12.next = 3;\n            break;\n          }\n          return _context12.abrupt(\"return\", new streaming_1.Stream(response, props.controller));\n        case 3:\n          contentType = response.headers.get('content-type');\n          if (!(contentType === null || contentType === void 0 ? void 0 : contentType.includes('application/json'))) {\n            _context12.next = 10;\n            break;\n          }\n          _context12.next = 7;\n          return response.json();\n        case 7:\n          json = _context12.sent;\n          debug('response', response.status, response.url, response.headers, json);\n          return _context12.abrupt(\"return\", json);\n        case 10:\n          _context12.next = 12;\n          return response.text();\n        case 12:\n          text = _context12.sent;\n          debug('response', response.status, response.url, response.headers, text);\n          return _context12.abrupt(\"return\", text);\n        case 15:\n        case \"end\":\n          return _context12.stop();\n      }\n    }, _callee12);\n  }));\n  return _defaultParseResponse.apply(this, arguments);\n}\nvar APIPromise = /*#__PURE__*/function (_Promise) {\n  _inherits(APIPromise, _Promise);\n  function APIPromise(responsePromise) {\n    var _this4;\n    var parseResponse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultParseResponse;\n    _classCallCheck(this, APIPromise);\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(APIPromise).call(this, function (resolve) {\n      // this is maybe a bit weird but this has to be a no-op to not implicitly\n      // parse the response body; instead .then, .catch, .finally are overridden\n      // to parse the response\n      resolve(null);\n    }));\n    _this4.responsePromise = responsePromise;\n    _this4.parseResponse = parseResponse;\n    return _this4;\n  }\n  _createClass(APIPromise, [{\n    key: \"_thenUnwrap\",\n    value: function _thenUnwrap(transform) {\n      var _this5 = this;\n      return new APIPromise(this.responsePromise, /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(props) {\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = transform;\n                _context.next = 3;\n                return _this5.parseResponse(props);\n              case 3:\n                _context.t1 = _context.sent;\n                return _context.abrupt(\"return\", (0, _context.t0)(_context.t1));\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee);\n        }));\n        return function (_x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n    /**\n     * Gets the raw `Response` instance instead of parsing the response\n     * data.\n     *\n     * If you want to parse the response body but still get the `Response`\n     * instance, you can use {@link withResponse()}.\n     */\n  }, {\n    key: \"asResponse\",\n    value: function asResponse() {\n      return this.responsePromise.then(function (p) {\n        return p.response;\n      });\n    }\n    /**\n     * Gets the parsed response data and the raw `Response` instance.\n     *\n     * If you just want to get the raw `Response` instance without parsing it,\n     * you can use {@link asResponse()}.\n     */\n  }, {\n    key: \"withResponse\",\n    value: function () {\n      var _withResponse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _yield$Promise$all, _yield$Promise$all2, data, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return Promise.all([this.parse(), this.asResponse()]);\n            case 2:\n              _yield$Promise$all = _context2.sent;\n              _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n              data = _yield$Promise$all2[0];\n              response = _yield$Promise$all2[1];\n              return _context2.abrupt(\"return\", {\n                data: data,\n                response: response\n              });\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function withResponse() {\n        return _withResponse.apply(this, arguments);\n      }\n      return withResponse;\n    }()\n  }, {\n    key: \"parse\",\n    value: function parse() {\n      if (!this.parsedPromise) {\n        this.parsedPromise = this.responsePromise.then(this.parseResponse);\n      }\n      return this.parsedPromise;\n    }\n  }, {\n    key: \"then\",\n    value: function then(onfulfilled, onrejected) {\n      return this.parse().then(onfulfilled, onrejected);\n    }\n  }, {\n    key: \"catch\",\n    value: function _catch(onrejected) {\n      return this.parse().catch(onrejected);\n    }\n  }, {\n    key: \"finally\",\n    value: function _finally(onfinally) {\n      return this.parse().finally(onfinally);\n    }\n  }]);\n  return APIPromise;\n}(_wrapNativeSuper(Promise));\nexports.APIPromise = APIPromise;\nvar APIClient = /*#__PURE__*/function () {\n  function APIClient(_ref2) {\n    var baseURL = _ref2.baseURL,\n      maxRetries = _ref2.maxRetries,\n      _ref2$timeout = _ref2.timeout,\n      timeout = _ref2$timeout === void 0 ? 600000 : _ref2$timeout,\n      httpAgent = _ref2.httpAgent,\n      overridenFetch = _ref2.fetch;\n    _classCallCheck(this, APIClient);\n    this.baseURL = baseURL;\n    this.maxRetries = validatePositiveInteger('maxRetries', maxRetries !== null && maxRetries !== void 0 ? maxRetries : MAX_RETRIES);\n    this.timeout = validatePositiveInteger('timeout', timeout);\n    this.httpAgent = httpAgent;\n    this.fetch = overridenFetch !== null && overridenFetch !== void 0 ? overridenFetch : fetch_1.fetch;\n  }\n  _createClass(APIClient, [{\n    key: \"authHeaders\",\n    value: function authHeaders(opts) {\n      return {};\n    }\n    /**\n     * Override this to add your own default headers, for example:\n     *\n     *  {\n     *    ...super.defaultHeaders(),\n     *    Authorization: 'Bearer 123',\n     *  }\n     */\n  }, {\n    key: \"defaultHeaders\",\n    value: function defaultHeaders(opts) {\n      return _objectSpread({\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'User-Agent': this.getUserAgent()\n      }, getPlatformHeaders(), this.authHeaders(opts));\n    }\n    /**\n     * Override this to add your own headers validation:\n     */\n  }, {\n    key: \"validateHeaders\",\n    value: function validateHeaders(headers, customHeaders) {}\n  }, {\n    key: \"defaultIdempotencyKey\",\n    value: function defaultIdempotencyKey() {\n      return \"stainless-node-retry-\".concat(uuid4());\n    }\n  }, {\n    key: \"get\",\n    value: function get(path, opts) {\n      return this.methodRequest('get', path, opts);\n    }\n  }, {\n    key: \"post\",\n    value: function post(path, opts) {\n      return this.methodRequest('post', path, opts);\n    }\n  }, {\n    key: \"patch\",\n    value: function patch(path, opts) {\n      return this.methodRequest('patch', path, opts);\n    }\n  }, {\n    key: \"put\",\n    value: function put(path, opts) {\n      return this.methodRequest('put', path, opts);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(path, opts) {\n      return this.methodRequest('delete', path, opts);\n    }\n  }, {\n    key: \"methodRequest\",\n    value: function methodRequest(method, path, opts) {\n      return this.request(Promise.resolve(opts).then(function (opts) {\n        return _objectSpread({\n          method: method,\n          path: path\n        }, opts);\n      }));\n    }\n  }, {\n    key: \"getAPIList\",\n    value: function getAPIList(path, Page, opts) {\n      return this.requestAPIList(Page, _objectSpread({\n        method: 'get',\n        path: path\n      }, opts));\n    }\n  }, {\n    key: \"calculateContentLength\",\n    value: function calculateContentLength(body) {\n      if (typeof body === 'string') {\n        if (typeof Buffer !== 'undefined') {\n          return Buffer.byteLength(body, 'utf8').toString();\n        }\n        if (typeof TextEncoder !== 'undefined') {\n          var encoder = new TextEncoder();\n          var encoded = encoder.encode(body);\n          return encoded.length.toString();\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"buildRequest\",\n    value: function buildRequest(options) {\n      var _a, _b, _c, _d, _e, _f;\n      var method = options.method,\n        path = options.path,\n        query = options.query,\n        _options$headers = options.headers,\n        headers = _options$headers === void 0 ? {} : _options$headers;\n      var body = (0, uploads_1.isMultipartBody)(options.body) ? options.body.body : options.body ? JSON.stringify(options.body, null, 2) : null;\n      var contentLength = this.calculateContentLength(body);\n      var url = this.buildURL(path, query);\n      if ('timeout' in options) validatePositiveInteger('timeout', options.timeout);\n      var timeout = (_a = options.timeout) !== null && _a !== void 0 ? _a : this.timeout;\n      var httpAgent = (_c = (_b = options.httpAgent) !== null && _b !== void 0 ? _b : this.httpAgent) !== null && _c !== void 0 ? _c : (0, agent_1.getDefaultAgent)(url);\n      var minAgentTimeout = timeout + 1000;\n      if (typeof ((_d = httpAgent === null || httpAgent === void 0 ? void 0 : httpAgent.options) === null || _d === void 0 ? void 0 : _d.timeout) === 'number' && minAgentTimeout > ((_e = httpAgent.options.timeout) !== null && _e !== void 0 ? _e : 0)) {\n        // Allow any given request to bump our agent active socket timeout.\n        // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n        // and without mutating agent we would need to create more of them.\n        // This tradeoff optimizes for performance.\n        httpAgent.options.timeout = minAgentTimeout;\n      }\n      if (this.idempotencyHeader && method !== 'get') {\n        if (!options.idempotencyKey) options.idempotencyKey = this.defaultIdempotencyKey();\n        headers[this.idempotencyHeader] = options.idempotencyKey;\n      }\n      var reqHeaders = _objectSpread({}, contentLength && {\n        'Content-Length': contentLength\n      }, this.defaultHeaders(options), headers);\n      // let builtin fetch set the Content-Type for multipart bodies\n      if ((0, uploads_1.isMultipartBody)(options.body) && !fetch_1.isPolyfilled) {\n        delete reqHeaders['Content-Type'];\n      }\n      // Strip any headers being explicitly omitted with null\n      Object.keys(reqHeaders).forEach(function (key) {\n        return reqHeaders[key] === null && delete reqHeaders[key];\n      });\n      var req = _objectSpread({\n        method: method\n      }, body && {\n        body: body\n      }, {\n        headers: reqHeaders\n      }, httpAgent && {\n        agent: httpAgent\n      }, {\n        // @ts-ignore node-fetch uses a custom AbortSignal type that is\n        // not compatible with standard web types\n        signal: (_f = options.signal) !== null && _f !== void 0 ? _f : null\n      });\n      this.validateHeaders(reqHeaders, headers);\n      return {\n        req: req,\n        url: url,\n        timeout: timeout\n      };\n    }\n    /**\n     * Used as a callback for mutating the given `RequestInit` object.\n     *\n     * This is useful for cases where you want to add certain headers based off of\n     * the request properties, e.g. `method` or `url`.\n     */\n  }, {\n    key: \"prepareRequest\",\n    value: function () {\n      var _prepareRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(request, _ref3) {\n        var url, options;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              url = _ref3.url, options = _ref3.options;\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      function prepareRequest(_x3, _x4) {\n        return _prepareRequest.apply(this, arguments);\n      }\n      return prepareRequest;\n    }()\n  }, {\n    key: \"parseHeaders\",\n    value: function parseHeaders(headers) {\n      return !headers ? {} : Symbol.iterator in headers ? Object.fromEntries(Array.from(headers).map(function (header) {\n        return _toConsumableArray(header);\n      })) : _objectSpread({}, headers);\n    }\n  }, {\n    key: \"makeStatusError\",\n    value: function makeStatusError(status, error, message, headers) {\n      return error_1.APIError.generate(status, error, message, headers);\n    }\n  }, {\n    key: \"request\",\n    value: function request(options) {\n      var remainingRetries = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      return new APIPromise(this.makeRequest(options, remainingRetries));\n    }\n  }, {\n    key: \"makeRequest\",\n    value: function () {\n      var _makeRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(optionsInput, retriesRemaining) {\n        var _a, _b, _c, options, _this$buildRequest, req, url, timeout, controller, response, responseHeaders, errText, errJSON, errMessage, err;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return optionsInput;\n            case 2:\n              options = _context4.sent;\n              if (retriesRemaining == null) {\n                retriesRemaining = (_a = options.maxRetries) !== null && _a !== void 0 ? _a : this.maxRetries;\n              }\n              _this$buildRequest = this.buildRequest(options), req = _this$buildRequest.req, url = _this$buildRequest.url, timeout = _this$buildRequest.timeout;\n              _context4.next = 7;\n              return this.prepareRequest(req, {\n                url: url,\n                options: options\n              });\n            case 7:\n              debug('request', url, options, req.headers);\n              if (!((_b = options.signal) === null || _b === void 0 ? void 0 : _b.aborted)) {\n                _context4.next = 10;\n                break;\n              }\n              throw new error_1.APIUserAbortError();\n            case 10:\n              controller = new AbortController();\n              _context4.next = 13;\n              return this.fetchWithTimeout(url, req, timeout, controller).catch(exports.castToError);\n            case 13:\n              response = _context4.sent;\n              if (!(response instanceof Error)) {\n                _context4.next = 22;\n                break;\n              }\n              if (!((_c = options.signal) === null || _c === void 0 ? void 0 : _c.aborted)) {\n                _context4.next = 17;\n                break;\n              }\n              throw new error_1.APIUserAbortError();\n            case 17:\n              if (!retriesRemaining) {\n                _context4.next = 19;\n                break;\n              }\n              return _context4.abrupt(\"return\", this.retryRequest(options, retriesRemaining));\n            case 19:\n              if (!(response.name === 'AbortError')) {\n                _context4.next = 21;\n                break;\n              }\n              throw new error_1.APIConnectionTimeoutError();\n            case 21:\n              throw new error_1.APIConnectionError({\n                cause: response\n              });\n            case 22:\n              responseHeaders = (0, exports.createResponseHeaders)(response.headers);\n              if (response.ok) {\n                _context4.next = 34;\n                break;\n              }\n              if (!(retriesRemaining && this.shouldRetry(response))) {\n                _context4.next = 26;\n                break;\n              }\n              return _context4.abrupt(\"return\", this.retryRequest(options, retriesRemaining, responseHeaders));\n            case 26:\n              _context4.next = 28;\n              return response.text().catch(function () {\n                return 'Unknown';\n              });\n            case 28:\n              errText = _context4.sent;\n              errJSON = (0, exports.safeJSON)(errText);\n              errMessage = errJSON ? undefined : errText;\n              debug('response', response.status, url, responseHeaders, errMessage);\n              err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n              throw err;\n            case 34:\n              return _context4.abrupt(\"return\", {\n                response: response,\n                options: options,\n                controller: controller\n              });\n            case 35:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function makeRequest(_x5, _x6) {\n        return _makeRequest.apply(this, arguments);\n      }\n      return makeRequest;\n    }()\n  }, {\n    key: \"requestAPIList\",\n    value: function requestAPIList(Page, options) {\n      var request = this.makeRequest(options, null);\n      return new PagePromise(this, request, Page);\n    }\n  }, {\n    key: \"buildURL\",\n    value: function buildURL(path, query) {\n      var url = isAbsoluteURL(path) ? new URL(path) : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n      var defaultQuery = this.defaultQuery();\n      if (!isEmptyObj(defaultQuery)) {\n        query = _objectSpread({}, defaultQuery, query);\n      }\n      if (query) {\n        url.search = this.stringifyQuery(query);\n      }\n      return url.toString();\n    }\n  }, {\n    key: \"stringifyQuery\",\n    value: function stringifyQuery(query) {\n      return Object.entries(query).filter(function (_ref4) {\n        var _ref5 = _slicedToArray(_ref4, 2),\n          _ = _ref5[0],\n          value = _ref5[1];\n        return typeof value !== 'undefined';\n      }).map(function (_ref6) {\n        var _ref7 = _slicedToArray(_ref6, 2),\n          key = _ref7[0],\n          value = _ref7[1];\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n          return \"\".concat(encodeURIComponent(key), \"=\").concat(encodeURIComponent(value));\n        }\n        if (value === null) {\n          return \"\".concat(encodeURIComponent(key), \"=\");\n        }\n        throw new Error(\"Cannot stringify type \".concat(typeof value, \"; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.\"));\n      }).join('&');\n    }\n  }, {\n    key: \"fetchWithTimeout\",\n    value: function () {\n      var _fetchWithTimeout = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(url, init, ms, controller) {\n        var _ref8, signal, options, timeout;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _ref8 = init || {}, signal = _ref8.signal, options = _objectWithoutProperties(_ref8, [\"signal\"]);\n              if (signal) signal.addEventListener('abort', function () {\n                return controller.abort();\n              });\n              timeout = setTimeout(function () {\n                return controller.abort();\n              }, ms);\n              return _context5.abrupt(\"return\", this.getRequestClient().fetch(url, _objectSpread({\n                signal: controller.signal\n              }, options)).finally(function () {\n                clearTimeout(timeout);\n              }));\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function fetchWithTimeout(_x7, _x8, _x9, _x10) {\n        return _fetchWithTimeout.apply(this, arguments);\n      }\n      return fetchWithTimeout;\n    }()\n  }, {\n    key: \"getRequestClient\",\n    value: function getRequestClient() {\n      return {\n        fetch: this.fetch\n      };\n    }\n  }, {\n    key: \"shouldRetry\",\n    value: function shouldRetry(response) {\n      // Note this is not a standard header.\n      var shouldRetryHeader = response.headers.get('x-should-retry');\n      // If the server explicitly says whether or not to retry, obey.\n      if (shouldRetryHeader === 'true') return true;\n      if (shouldRetryHeader === 'false') return false;\n      // Retry on lock timeouts.\n      if (response.status === 409) return true;\n      // Retry on rate limits.\n      if (response.status === 429) return true;\n      // Retry internal errors.\n      if (response.status >= 500) return true;\n      return false;\n    }\n  }, {\n    key: \"retryRequest\",\n    value: function () {\n      var _retryRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(options, retriesRemaining, responseHeaders) {\n        var _a, retryAfter, maxRetries, timeout;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              retriesRemaining -= 1;\n              // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n              //\n              // TODO: we may want to handle the case where the header is using the http-date syntax: \"Retry-After: <http-date>\".\n              // See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After#syntax for details.\n              retryAfter = parseInt((responseHeaders === null || responseHeaders === void 0 ? void 0 : responseHeaders['retry-after']) || '');\n              maxRetries = (_a = options.maxRetries) !== null && _a !== void 0 ? _a : this.maxRetries;\n              timeout = this.calculateRetryTimeoutSeconds(retriesRemaining, retryAfter, maxRetries) * 1000;\n              _context6.next = 6;\n              return sleep(timeout);\n            case 6:\n              return _context6.abrupt(\"return\", this.makeRequest(options, retriesRemaining));\n            case 7:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function retryRequest(_x11, _x12, _x13) {\n        return _retryRequest.apply(this, arguments);\n      }\n      return retryRequest;\n    }()\n  }, {\n    key: \"calculateRetryTimeoutSeconds\",\n    value: function calculateRetryTimeoutSeconds(retriesRemaining, retryAfter, maxRetries) {\n      var initialRetryDelay = 0.5;\n      var maxRetryDelay = 2;\n      // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n      // just do what it says.\n      if (Number.isInteger(retryAfter) && retryAfter <= 60) {\n        return retryAfter;\n      }\n      var numRetries = maxRetries - retriesRemaining;\n      // Apply exponential backoff, but not more than the max.\n      var sleepSeconds = Math.min(initialRetryDelay * Math.pow(numRetries - 1, 2), maxRetryDelay);\n      // Apply some jitter, plus-or-minus half a second.\n      var jitter = Math.random() - 0.5;\n      return sleepSeconds + jitter;\n    }\n  }, {\n    key: \"getUserAgent\",\n    value: function getUserAgent() {\n      return \"\".concat(this.constructor.name, \"/JS \").concat(version_1.VERSION);\n    }\n  }]);\n  return APIClient;\n}();\nexports.APIClient = APIClient;\nvar APIResource = function APIResource(client) {\n  _classCallCheck(this, APIResource);\n  this.client = client;\n  this.get = client.get.bind(client);\n  this.post = client.post.bind(client);\n  this.patch = client.patch.bind(client);\n  this.put = client.put.bind(client);\n  this.delete = client.delete.bind(client);\n  this.getAPIList = client.getAPIList.bind(client);\n};\nexports.APIResource = APIResource;\nvar AbstractPage = /*#__PURE__*/function () {\n  function AbstractPage(client, response, body, options) {\n    _classCallCheck(this, AbstractPage);\n    _AbstractPage_client.set(this, void 0);\n    __classPrivateFieldSet(this, _AbstractPage_client, client, 'f');\n    this.options = options;\n    this.response = response;\n    this.body = body;\n  }\n  _createClass(AbstractPage, [{\n    key: \"hasNextPage\",\n    value: function hasNextPage() {\n      var items = this.getPaginatedItems();\n      if (!items.length) return false;\n      return this.nextPageInfo() != null;\n    }\n  }, {\n    key: \"getNextPage\",\n    value: function () {\n      var _getNextPage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var nextInfo, nextOptions, params, _iterator3, _step3, _step3$value, key, value;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              nextInfo = this.nextPageInfo();\n              if (nextInfo) {\n                _context7.next = 3;\n                break;\n              }\n              throw new Error('No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.');\n            case 3:\n              nextOptions = _objectSpread({}, this.options);\n              if ('params' in nextInfo) {\n                nextOptions.query = _objectSpread({}, nextOptions.query, nextInfo.params);\n              } else if ('url' in nextInfo) {\n                params = [].concat(_toConsumableArray(Object.entries(nextOptions.query || {})), _toConsumableArray(nextInfo.url.searchParams.entries()));\n                _iterator3 = _createForOfIteratorHelper(params);\n                try {\n                  for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                    _step3$value = _slicedToArray(_step3.value, 2), key = _step3$value[0], value = _step3$value[1];\n                    nextInfo.url.searchParams.set(key, value);\n                  }\n                } catch (err) {\n                  _iterator3.e(err);\n                } finally {\n                  _iterator3.f();\n                }\n                nextOptions.query = undefined;\n                nextOptions.path = nextInfo.url.toString();\n              }\n              _context7.next = 7;\n              return __classPrivateFieldGet(this, _AbstractPage_client, 'f').requestAPIList(this.constructor, nextOptions);\n            case 7:\n              return _context7.abrupt(\"return\", _context7.sent);\n            case 8:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function getNextPage() {\n        return _getNextPage.apply(this, arguments);\n      }\n      return getNextPage;\n    }()\n  }, {\n    key: \"iterPages\",\n    value: function iterPages() {\n      var _this = this;\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var page;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              // eslint-disable-next-line @typescript-eslint/no-this-alias\n              page = _this;\n              _context8.next = 3;\n              return page;\n            case 3:\n              if (!page.hasNextPage()) {\n                _context8.next = 11;\n                break;\n              }\n              _context8.next = 6;\n              return _awaitAsyncGenerator(page.getNextPage());\n            case 6:\n              page = _context8.sent;\n              _context8.next = 9;\n              return page;\n            case 9:\n              _context8.next = 3;\n              break;\n            case 11:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8);\n      }))();\n    }\n  }, {\n    key: (_AbstractPage_client = new WeakMap(), Symbol.asyncIterator),\n    value: function value() {\n      var _this2 = this;\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, page, _iterator4, _step4, item;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context9.prev = 2;\n              _iterator = _asyncIterator(_this2.iterPages());\n            case 4:\n              _context9.next = 6;\n              return _awaitAsyncGenerator(_iterator.next());\n            case 6:\n              if (!(_iteratorAbruptCompletion = !(_step = _context9.sent).done)) {\n                _context9.next = 28;\n                break;\n              }\n              page = _step.value;\n              _iterator4 = _createForOfIteratorHelper(page.getPaginatedItems());\n              _context9.prev = 9;\n              _iterator4.s();\n            case 11:\n              if ((_step4 = _iterator4.n()).done) {\n                _context9.next = 17;\n                break;\n              }\n              item = _step4.value;\n              _context9.next = 15;\n              return item;\n            case 15:\n              _context9.next = 11;\n              break;\n            case 17:\n              _context9.next = 22;\n              break;\n            case 19:\n              _context9.prev = 19;\n              _context9.t0 = _context9[\"catch\"](9);\n              _iterator4.e(_context9.t0);\n            case 22:\n              _context9.prev = 22;\n              _iterator4.f();\n              return _context9.finish(22);\n            case 25:\n              _iteratorAbruptCompletion = false;\n              _context9.next = 4;\n              break;\n            case 28:\n              _context9.next = 34;\n              break;\n            case 30:\n              _context9.prev = 30;\n              _context9.t1 = _context9[\"catch\"](2);\n              _didIteratorError = true;\n              _iteratorError = _context9.t1;\n            case 34:\n              _context9.prev = 34;\n              _context9.prev = 35;\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context9.next = 39;\n                break;\n              }\n              _context9.next = 39;\n              return _awaitAsyncGenerator(_iterator.return());\n            case 39:\n              _context9.prev = 39;\n              if (!_didIteratorError) {\n                _context9.next = 42;\n                break;\n              }\n              throw _iteratorError;\n            case 42:\n              return _context9.finish(39);\n            case 43:\n              return _context9.finish(34);\n            case 44:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, null, [[2, 30, 34, 44], [9, 19, 22, 25], [35,, 39, 43]]);\n      }))();\n    }\n  }]);\n  return AbstractPage;\n}();\nexports.AbstractPage = AbstractPage;\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nvar PagePromise = /*#__PURE__*/function (_APIPromise) {\n  _inherits(PagePromise, _APIPromise);\n  function PagePromise(client, request, Page) {\n    _classCallCheck(this, PagePromise);\n    return _possibleConstructorReturn(this, _getPrototypeOf(PagePromise).call(this, request, /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(props) {\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.t0 = Page;\n              _context10.t1 = client;\n              _context10.t2 = props.response;\n              _context10.next = 5;\n              return defaultParseResponse(props);\n            case 5:\n              _context10.t3 = _context10.sent;\n              _context10.t4 = props.options;\n              return _context10.abrupt(\"return\", new _context10.t0(_context10.t1, _context10.t2, _context10.t3, _context10.t4));\n            case 8:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10);\n      }));\n      return function (_x14) {\n        return _ref9.apply(this, arguments);\n      };\n    }()));\n  }\n  /**\n   * Allow auto-paginating iteration on an unawaited list call, eg:\n   *\n   *    for await (const item of client.items.list()) {\n   *      console.log(item)\n   *    }\n   */\n  _createClass(PagePromise, [{\n    key: Symbol.asyncIterator,\n    value: function value() {\n      var _this3 = this;\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n        var page, _iteratorAbruptCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, item;\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.next = 2;\n              return _awaitAsyncGenerator(_this3);\n            case 2:\n              page = _context11.sent;\n              _iteratorAbruptCompletion2 = false;\n              _didIteratorError2 = false;\n              _context11.prev = 5;\n              _iterator2 = _asyncIterator(page);\n            case 7:\n              _context11.next = 9;\n              return _awaitAsyncGenerator(_iterator2.next());\n            case 9:\n              if (!(_iteratorAbruptCompletion2 = !(_step2 = _context11.sent).done)) {\n                _context11.next = 16;\n                break;\n              }\n              item = _step2.value;\n              _context11.next = 13;\n              return item;\n            case 13:\n              _iteratorAbruptCompletion2 = false;\n              _context11.next = 7;\n              break;\n            case 16:\n              _context11.next = 22;\n              break;\n            case 18:\n              _context11.prev = 18;\n              _context11.t0 = _context11[\"catch\"](5);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context11.t0;\n            case 22:\n              _context11.prev = 22;\n              _context11.prev = 23;\n              if (!(_iteratorAbruptCompletion2 && _iterator2.return != null)) {\n                _context11.next = 27;\n                break;\n              }\n              _context11.next = 27;\n              return _awaitAsyncGenerator(_iterator2.return());\n            case 27:\n              _context11.prev = 27;\n              if (!_didIteratorError2) {\n                _context11.next = 30;\n                break;\n              }\n              throw _iteratorError2;\n            case 30:\n              return _context11.finish(27);\n            case 31:\n              return _context11.finish(22);\n            case 32:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11, null, [[5, 18, 22, 32], [23,, 27, 31]]);\n      }))();\n    }\n  }]);\n  return PagePromise;\n}(APIPromise);\nexports.PagePromise = PagePromise;\nvar createResponseHeaders = function createResponseHeaders(headers) {\n  return new Proxy(Object.fromEntries(\n  // @ts-ignore\n  headers.entries()), {\n    get: function get(target, name) {\n      var key = name.toString();\n      return target[key.toLowerCase()] || target[key];\n    }\n  });\n};\nexports.createResponseHeaders = createResponseHeaders;\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nvar requestOptionsKeys = {\n  method: true,\n  path: true,\n  query: true,\n  body: true,\n  headers: true,\n  maxRetries: true,\n  stream: true,\n  timeout: true,\n  httpAgent: true,\n  signal: true,\n  idempotencyKey: true\n};\nvar isRequestOptions = function isRequestOptions(obj) {\n  return typeof obj === 'object' && obj !== null && !isEmptyObj(obj) && Object.keys(obj).every(function (k) {\n    return hasOwn(requestOptionsKeys, k);\n  });\n};\nexports.isRequestOptions = isRequestOptions;\nvar getPlatformProperties = function getPlatformProperties() {\n  if (typeof Deno !== 'undefined' && Deno.build != null) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': version_1.VERSION,\n      'X-Stainless-OS': normalizePlatform(Deno.build.os),\n      'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n      'X-Stainless-Runtime': 'deno',\n      'X-Stainless-Runtime-Version': Deno.version\n    };\n  }\n  if (typeof EdgeRuntime !== 'undefined') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': version_1.VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': \"other:\".concat(EdgeRuntime),\n      'X-Stainless-Runtime': 'edge',\n      'X-Stainless-Runtime-Version': process.version\n    };\n  }\n  // Check if Node.js\n  if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': version_1.VERSION,\n      'X-Stainless-OS': normalizePlatform(process.platform),\n      'X-Stainless-Arch': normalizeArch(process.arch),\n      'X-Stainless-Runtime': 'node',\n      'X-Stainless-Runtime-Version': process.version\n    };\n  }\n  var browserInfo = getBrowserInfo();\n  if (browserInfo) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': version_1.VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': 'unknown',\n      'X-Stainless-Runtime': \"browser:\".concat(browserInfo.browser),\n      'X-Stainless-Runtime-Version': browserInfo.version\n    };\n  }\n  // TODO add support for Cloudflare workers, etc.\n  return {\n    'X-Stainless-Lang': 'js',\n    'X-Stainless-Package-Version': version_1.VERSION,\n    'X-Stainless-OS': 'Unknown',\n    'X-Stainless-Arch': 'unknown',\n    'X-Stainless-Runtime': 'unknown',\n    'X-Stainless-Runtime-Version': 'unknown'\n  };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n  if (typeof navigator === 'undefined' || !navigator) {\n    return null;\n  }\n  // NOTE: The order matters here!\n  var browserPatterns = [{\n    key: 'edge',\n    pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'ie',\n    pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'ie',\n    pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'chrome',\n    pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'firefox',\n    pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'safari',\n    pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/\n  }];\n  // Find the FIRST matching browser\n  for (var _i = 0, _browserPatterns = browserPatterns; _i < _browserPatterns.length; _i++) {\n    var _browserPatterns$_i = _browserPatterns[_i],\n      key = _browserPatterns$_i.key,\n      pattern = _browserPatterns$_i.pattern;\n    var match = pattern.exec(navigator.userAgent);\n    if (match) {\n      var major = match[1] || 0;\n      var minor = match[2] || 0;\n      var patch = match[3] || 0;\n      return {\n        browser: key,\n        version: \"\".concat(major, \".\").concat(minor, \".\").concat(patch)\n      };\n    }\n  }\n  return null;\n}\nvar normalizeArch = function normalizeArch(arch) {\n  // Node docs:\n  // - https://nodejs.org/api/process.html#processarch\n  // Deno docs:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  if (arch === 'x32') return 'x32';\n  if (arch === 'x86_64' || arch === 'x64') return 'x64';\n  if (arch === 'arm') return 'arm';\n  if (arch === 'aarch64' || arch === 'arm64') return 'arm64';\n  if (arch) return \"other:\".concat(arch);\n  return 'unknown';\n};\nvar normalizePlatform = function normalizePlatform(platform) {\n  // Node platforms:\n  // - https://nodejs.org/api/process.html#processplatform\n  // Deno platforms:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  // - https://github.com/denoland/deno/issues/14799\n  platform = platform.toLowerCase();\n  // NOTE: this iOS check is untested and may not work\n  // Node does not work natively on IOS, there is a fork at\n  // https://github.com/nodejs-mobile/nodejs-mobile\n  // however it is unknown at the time of writing how to detect if it is running\n  if (platform.includes('ios')) return 'iOS';\n  if (platform === 'android') return 'Android';\n  if (platform === 'darwin') return 'MacOS';\n  if (platform === 'win32') return 'Windows';\n  if (platform === 'freebsd') return 'FreeBSD';\n  if (platform === 'openbsd') return 'OpenBSD';\n  if (platform === 'linux') return 'Linux';\n  if (platform) return \"Other:\".concat(platform);\n  return 'Unknown';\n};\nvar _platformHeaders;\nvar getPlatformHeaders = function getPlatformHeaders() {\n  return _platformHeaders !== null && _platformHeaders !== void 0 ? _platformHeaders : _platformHeaders = getPlatformProperties();\n};\nvar safeJSON = function safeJSON(text) {\n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    return undefined;\n  }\n};\nexports.safeJSON = safeJSON;\n// https://stackoverflow.com/a/19709846\nvar startsWithSchemeRegexp = new RegExp('^(?:[a-z]+:)?//', 'i');\nvar isAbsoluteURL = function isAbsoluteURL(url) {\n  return startsWithSchemeRegexp.test(url);\n};\nvar sleep = function sleep(ms) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, ms);\n  });\n};\nvar validatePositiveInteger = function validatePositiveInteger(name, n) {\n  if (typeof n !== 'number' || !Number.isInteger(n)) {\n    throw new Error(\"\".concat(name, \" must be an integer\"));\n  }\n  if (n < 0) {\n    throw new Error(\"\".concat(name, \" must be a positive integer\"));\n  }\n  return n;\n};\nvar castToError = function castToError(err) {\n  if (err instanceof Error) return err;\n  return new Error(err);\n};\nexports.castToError = castToError;\nvar ensurePresent = function ensurePresent(value) {\n  if (value == null) throw new Error(\"Expected a value to be given but received \".concat(value, \" instead.\"));\n  return value;\n};\nexports.ensurePresent = ensurePresent;\n/**\n * Read an environment variable.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nvar readEnv = function readEnv(env) {\n  var _a, _b, _c, _d;\n  if (typeof process !== 'undefined') {\n    return (_b = (_a = process.env) === null || _a === void 0 ? void 0 : _a[env]) !== null && _b !== void 0 ? _b : undefined;\n  }\n  if (typeof Deno !== 'undefined') {\n    return (_d = (_c = Deno.env) === null || _c === void 0 ? void 0 : _c.get) === null || _d === void 0 ? void 0 : _d.call(_c, env);\n  }\n  return undefined;\n};\nexports.readEnv = readEnv;\nvar coerceInteger = function coerceInteger(value) {\n  if (typeof value === 'number') return Math.round(value);\n  if (typeof value === 'string') return parseInt(value, 10);\n  throw new Error(\"Could not coerce \".concat(value, \" (type: \").concat(typeof value, \") into a number\"));\n};\nexports.coerceInteger = coerceInteger;\nvar coerceFloat = function coerceFloat(value) {\n  if (typeof value === 'number') return value;\n  if (typeof value === 'string') return parseFloat(value);\n  throw new Error(\"Could not coerce \".concat(value, \" (type: \").concat(typeof value, \") into a number\"));\n};\nexports.coerceFloat = coerceFloat;\nvar coerceBoolean = function coerceBoolean(value) {\n  if (typeof value === 'boolean') return value;\n  if (typeof value === 'string') return value === 'true';\n  return Boolean(value);\n};\nexports.coerceBoolean = coerceBoolean;\nvar maybeCoerceInteger = function maybeCoerceInteger(value) {\n  if (value === undefined) {\n    return undefined;\n  }\n  return (0, exports.coerceInteger)(value);\n};\nexports.maybeCoerceInteger = maybeCoerceInteger;\nvar maybeCoerceFloat = function maybeCoerceFloat(value) {\n  if (value === undefined) {\n    return undefined;\n  }\n  return (0, exports.coerceFloat)(value);\n};\nexports.maybeCoerceFloat = maybeCoerceFloat;\nvar maybeCoerceBoolean = function maybeCoerceBoolean(value) {\n  if (value === undefined) {\n    return undefined;\n  }\n  return (0, exports.coerceBoolean)(value);\n};\nexports.maybeCoerceBoolean = maybeCoerceBoolean;\n// https://stackoverflow.com/a/34491287\nfunction isEmptyObj(obj) {\n  if (!obj) return true;\n  for (var _k in obj) return false;\n  return true;\n}\nexports.isEmptyObj = isEmptyObj;\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nfunction hasOwn(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\nexports.hasOwn = hasOwn;\nfunction debug(action) {\n  if (typeof process !== 'undefined' && process.env['DEBUG'] === 'true') {\n    var _console;\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    (_console = console).log.apply(_console, [\"OpenAI:DEBUG:\".concat(action)].concat(args));\n  }\n}\nexports.debug = debug;\n/**\n * https://stackoverflow.com/a/2117523\n */\nvar uuid4 = function uuid4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0;\n    var v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n};\nvar isRunningInBrowser = function isRunningInBrowser() {\n  return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n    // @ts-ignore\n    typeof window.document !== 'undefined' &&\n    // @ts-ignore\n    typeof navigator !== 'undefined'\n  );\n};\nexports.isRunningInBrowser = isRunningInBrowser;\nvar isHeadersProtocol = function isHeadersProtocol(headers) {\n  return typeof (headers === null || headers === void 0 ? void 0 : headers.get) === 'function';\n};\nexports.isHeadersProtocol = isHeadersProtocol;\nvar getHeader = function getHeader(headers, key) {\n  var lowerKey = key.toLowerCase();\n  if ((0, exports.isHeadersProtocol)(headers)) return headers.get(key) || headers.get(lowerKey);\n  var value = headers[key] || headers[lowerKey];\n  if (Array.isArray(value)) {\n    if (value.length <= 1) return value[0];\n    console.warn(\"Received \".concat(value.length, \" entries for the \").concat(key, \" header, using the first entry.\"));\n    return value[0];\n  }\n  return value;\n};\nexports.getHeader = getHeader;\n/**\n * Encodes a string to Base64 format.\n */\nvar toBase64 = function toBase64(str) {\n  if (!str) return '';\n  if (typeof Buffer !== 'undefined') {\n    return Buffer.from(str).toString('base64');\n  }\n  if (typeof btoa !== 'undefined') {\n    return btoa(str);\n  }\n  throw new Error('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};\nexports.toBase64 = toBase64;","map":null,"metadata":{},"sourceType":"script"}