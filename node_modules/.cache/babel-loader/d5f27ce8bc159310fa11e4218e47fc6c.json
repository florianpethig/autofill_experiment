{"ast":null,"code":"import _slicedToArray from \"/home/smnc/Documents/weizenbaum/autofill_experiment2/autofill_experiment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/smnc/Documents/weizenbaum/autofill_experiment2/autofill_experiment/src/autocompleteTextbox.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nfunction AutocompleteTextbox() {\n  var _this = this;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputValue = _useState2[0],\n    setInputValue = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    suggestions = _useState4[0],\n    setSuggestions = _useState4[1];\n  var inputRef = useRef(null);\n  var timeoutId = null;\n  var handleInputChange = function handleInputChange(event) {\n    var newValue = event.target.value;\n    setInputValue(newValue);\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(function () {\n      // Call function to query ChatGPT and set suggestions\n    }, 3000); // 3000 milliseconds = 3 seconds\n  };\n\n  useEffect(function () {\n    return function () {\n      return clearTimeout(timeoutId);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputRef,\n    type: \"text\",\n    value: inputValue,\n    onChange: handleInputChange,\n    onKeyDown: function onKeyDown(e) {\n      return handleKeyDown(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, suggestions.map(function (suggestion, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, suggestion);\n  })));\n}\nexport default AutocompleteTextbox;","map":{"version":3,"names":["React","useState","useRef","useEffect","AutocompleteTextbox","_this","_useState","_useState2","_slicedToArray","inputValue","setInputValue","_useState3","_useState4","suggestions","setSuggestions","inputRef","timeoutId","handleInputChange","event","newValue","target","value","clearTimeout","setTimeout","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","onChange","onKeyDown","e","handleKeyDown","map","suggestion","index","key"],"sources":["/home/smnc/Documents/weizenbaum/autofill_experiment2/autofill_experiment/src/autocompleteTextbox.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\nfunction AutocompleteTextbox() {\n  const [inputValue, setInputValue] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const inputRef = useRef(null);\n  let timeoutId = null;\n\n  const handleInputChange = (event) => {\n    const newValue = event.target.value;\n    setInputValue(newValue);\n\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => {\n      // Call function to query ChatGPT and set suggestions\n    }, 3000); // 3000 milliseconds = 3 seconds\n  };\n\n  useEffect(() => {\n    return () => clearTimeout(timeoutId);\n  }, []);\n\n  return (\n    <div>\n      <input\n        ref={inputRef}\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n        onKeyDown={(e) => handleKeyDown(e)}\n      />\n      {/* Render autocomplete suggestions */}\n      <ul>\n        {suggestions.map((suggestion, index) => (\n          <li key={index}>{suggestion}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default AutocompleteTextbox;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAE1D,SAASC,mBAAmBA,CAAA,EAAG;EAAA,IAAAC,KAAA;EAAA,IAAAC,SAAA,GACOL,QAAQ,CAAC,EAAE,CAAC;IAAAM,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAAA,IAAAI,UAAA,GACMV,QAAQ,CAAC,EAAE,CAAC;IAAAW,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA3CE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAClC,IAAMG,QAAQ,GAAGb,MAAM,CAAC,IAAI,CAAC;EAC7B,IAAIc,SAAS,GAAG,IAAI;EAEpB,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,KAAK,EAAK;IACnC,IAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACnCX,aAAa,CAACS,QAAQ,CAAC;IAEvBG,YAAY,CAACN,SAAS,CAAC;IACvBA,SAAS,GAAGO,UAAU,CAAC,YAAM;MAC3B;IAAA,CACD,EAAE,IAAI,CAAC,CAAC,CAAC;EACZ,CAAC;;EAEDpB,SAAS,CAAC,YAAM;IACd,OAAO;MAAA,OAAMmB,YAAY,CAACN,SAAS,CAAC;IAAA;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhB,KAAA,CAAAwB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE9B,KAAA,CAAAwB,aAAA;IACEO,GAAG,EAAEhB,QAAS;IACdiB,IAAI,EAAC,MAAM;IACXX,KAAK,EAAEZ,UAAW;IAClBwB,QAAQ,EAAEhB,iBAAkB;IAC5BiB,SAAS,EAAE,SAAAA,UAACC,CAAC;MAAA,OAAKC,aAAa,CAACD,CAAC,CAAC;IAAA,CAAC;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACpC,CAAC,eAEF9B,KAAA,CAAAwB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACGjB,WAAW,CAACwB,GAAG,CAAC,UAACC,UAAU,EAAEC,KAAK;IAAA,oBACjCvC,KAAA,CAAAwB,aAAA;MAAIgB,GAAG,EAAED,KAAM;MAAAd,MAAA,EAAApB,KAAA;MAAAqB,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAEQ,UAAe,CAAC;EAAA,CAClC,CACC,CACD,CAAC;AAEV;AAEA,eAAelC,mBAAmB"},"metadata":{},"sourceType":"module"}